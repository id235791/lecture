mongoose 모듈
	mongodb의 odm(Object Data Mapping) 모듈
	하나의 컬렉션 안에 똑같은 속성을 가진 문서객체를 반복적으로 넣어두면
	데이터를 조회할 때도 어떤 속성들이 있는지 미리 알고 있는 상태에서
	조회할 수 있음 -> 스키마를 생성
	npm i mongoose

odm(Object Data Mapping)
	데이터베이스와 객체지향 프로그래밍 언어 사이에 호환되지 않는
	데이터를 변환하는 프로그래밍 기법

	    mongodb             vs              mongoose
	java jdbc driver                      java mybatis, hibernate
	  (속도가 빠름)


스키마
	데이터 유효성 검증을 위해 사용
	데이터 타입 및 규약등 설정
	스키마에 사용되는 타입
	String, Number, Date, Boolean, Array ..

모델
	데이터베이스에서 데이터를 읽고, 생성하고, 수정하고,
	삭제하는 인터페이스를 정의해줌
	mongoose객체.model(컬렉션명, 스키마명);
	예) let UserModel = mongoose.model('user', UserSchema);	
		-> users
	컬렉션 이름을 미리 지정하지 않으면 첫번째 매개변수에 s를 붙여
	복수형으로 이름을 생성

컬렉션명을 직접 설정하는 방법
	mongoose.pluralilize(null); -> s자를 자동으로 붙이지 않도록 설정

	const UserSchema = new mongoose.Schema({
		userid:String,
		userpw:String,
		name:String,
		gender:String
	},
	{
		collection: 'user'
	});

socket.io 모듈
	웹소켓을 이용하여 클라이언트에 실시간으로 데이터를 전송
	socket을 구현한 것으로 WebSocket 개발을 쉽게 할 수 있음
	npm i socket.io

client cdn
	https://socket.io/docs/v4/client-installation/
