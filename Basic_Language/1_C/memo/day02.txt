변수의 선언
	자료형 변수명 = 값;
	자료형 변수명;

변수 선언시 주의사항
	같은 이름의 변수를 선언할 수 없다.
	초기화를 해준다.
	선언부(함수 상단)에 한꺼번에 선언한다.

변수명 주의사항
	숫자는 맨 앞에 쓸 수 없다.
	되도록 소문자만 사용한다.
	특수문자를 쓸 수 없다.
	공백은 사용할 수 없다.
	단, _ 는 사용 가능하다.(now_here)

	카멜 표기법 : nowHere
	
	되도록 한글은 사용하지 않는다.
	의미있는 명사형의 단어로 사용한다.
	a,b,c,...		(X)
	num,data,height,...	(O)

변수 선언시 RAM
	int x = 10;
	x라는 이름의 저장공간이 RAM에 할당되고,
	고유한 값인 주소값이 부여된다.
	주소값은 정할 수 없다.

주소
	저장공간이 RAM에 할당되면 유일무이한 값인 주소값이 부여되고
	주소값으로 찾아가는것이 변수명으로 찾아가는것보다 상대적으로 빠르다.1

변수의 사용
	변수명을 그대로 사용한다.

	data = 20;
	printf("%d",data);

변수를 사용하는 이유
	1. 의미가 같은 반복되는 값을 쉽게 관리하기 위해서
	
	2. 값에 의미부여를 하기 위해서
		double height = 179.25;
		printf("%f",height);

입력
	사용자가 개발자에게 값을 넘겨주는 행위

입력 상태
	커서가 깜빡이면서 값이 들어오기를 기다리는 상태
	개발자가 할 수 있는일은 사용자에게 입력상태로 만들어주는것 까지이다.
	아래의 코드들은 입력된 값이 있다고 가정하고 작성한다.

입력 함수
	scanf_s("서식문자",&변수);
	int data=0;
	& : 주소연산자
	scanf_s("%d",&data);

자료형	type	크기	값
실수형	float	4 byte	1.0F
	double	8 byte	1.0

형변환
	자동 형변환
		문자 + 정수 --> 정수
		'A' + 5 --> 70
		정수 + 실수 --> 실수
			
	강제 형변환
		(자료형) : 형변환 연산자

		(자료형)값
		(double)10

연산자
	기능이 있는 특수문자 또는 단어

우선순위
	한 문장 안에 여러 연산자가 있을 때 먼저 연산하는 순위

	최우선 연산자
		()
	단항 연산자
		형변환 연산자, &
	이항 연산자
		산술 연산자
		쉬프트 연산자
		관계 연산자
		논리 연산자

	삼항 연산자

	대입 연산자
		=

결합성
	한 문장안에 우선순위가 같은 연산자가 있을 때
	알맞는 방향으로 결합되어 연산하는 성질

	(1+2)+3+4+5
	(3+3)+4+5
	(6+4)+5
	10+5
	15

비트 연산
	bit : 컴퓨터 용량의 최소단위
	byte : 8bit, 데이터의 최소단위

	14	01110	[0][1][1][1][0]
	17	10001	[1][0][0][0][1]

	&(AND)	: 논리곱		두 비트가 모두 1일때 1
	14&17 --> (2진법) 01110&10001 --> (2진법) 00000 --> (10진법) 0

	|(OR)	: 논리합		두 비트중 하나라도 1이면 1
	14|17 --> (2진법) 01110|10001 --> (2진법) 11111 --> (10진법) 31

	^(XOR)	: 배타논리합	두 비트가 서로 다를 때 1
	14^17 --> (2진법) 01110^10001 --> (2진법) 11111 --> (10진법) 31

	~(NOT)	: 비트뒤집기, 논리부정	0은 1로, 1은 0으로
	~14 --> (2진법) ~01110 --> (2진법) 10001 --> (10진법) -15
	~a = -(a+1)

쉬프트 연산자
	
	a<<b : a를 b만큼 좌로 비트이동
	14<<1 --> (2진법) 01110<<1 --> (2진법) 011100 --> (10진법) 28

	a>>b : a를 b만큼 우로 비트이동
	14>>1 --> (2진법) 01110>>1 --> (2진법) 00111 --> (10진법) 7

	빈 자리는 부호비트로 채워지고 비트가 넘어가면 자동으로 잘린다.

조건식
	조건을 제시하는 식
	주장하는 식
	결과가 0 또는 1 단 두가지로 나오는 식
	관계연산자가 포함되어 있다.

관계 연산자
	
	>, <	: 초과, 미만
	>=, <=	: 이상, 이하
	==	: 같다
	!=	: 다르다

논리 연산자
	A,B는 조건식으로 가정한다.

	A&&B : A,B의 연산 결과가 둘 다 1이면 1

	A||B : A,B의 연산 결과중 하나라도 1이면 1

단항 연산자
	!A : A의 연산 결과를 1이라면 0으로, 0이라면 1로
	

최우선 연산자
	()
단항 연산자
	형변환 연산자, &(주소연산자), !, ~
산술 연산자
	+ - * / %
쉬프트 연산자
	>> <<
관계 연산자
	> < >= <= == !=
논리 연산자
	&& ||
삼항 연산자
대입 연산자

삼항 연산자
	(조건식) ? (조건식이 참일 때 오는 부분) : (조건식이 거짓일 때 오는 부분)

	조건식 ? 참일 때 수행할 문장 : 거짓일 때 수행할 문장	(통째로 값X)
	조건식 ? 참일때의 값 : 거짓일때의 값			(통째로 값O)












