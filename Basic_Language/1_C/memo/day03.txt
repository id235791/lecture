제어문
	위에서 아래로만 흐르던 코드의 흐름을 제어하기 위해서 사용하는 문장

	조건문(선택제어문)
		if ~ else if ~ else
		switch ~ case ~ default
	반복문(반복제어문)
		while
		for

조건문
	조건에 따라서 경우의 수를 나눌 때
	흐름을 나눌 때
	특정 상태를 물어볼 때(ex: 비밀번호가 abcd니? 고른게 3이니?)

if문
	if(조건식1){
		조건식1의 연산 결과가 1일때만 수행할 문장
	}
	else if(조건식2){
		조건식2의 연산 결과가 1일때만 수행할 문장
	}
	...
	else{
		위에있는 조건식들의 연산 결과가 모두 0일때 수행할 문장
	}

	조건식 중 하나가 1인 경우 안의 내용을 실행한 후 아래 내용들은 하지 않고 세트를 탈출한다.
	else if와 else문은 생략이 가능하다.

switch문
	경우의 수를 하나의 변수 안에 담긴 값의 등가비교로 나눌 때
	
	switch(변수){
	case 값1:
		변수의 값이 값1일때 수행할 문장
		break;
	case 값2:
		변수의 값이 값2일때 수행할 문장
		break;
	...
	default:
		위의 값들이 아닐 때 수행할 문장
	}

기타 연산자
	break	: 감싸고 있는 switch문이나 반복문을 탈출한다.
	continue

누적 연산자(복합 대입 연산자, 누적 대입 연산자)
	+=, -=, *=, /=

	int data = 10;

	data = data+5;
	data += 5;
	data += 3*2+1;

증감 연산자
	++, --
	data += 1;
	data++;

	전위형
		++data;		해당 줄부터 적용

		int data = 10;
		printf("%d\n",++data);	//11
		printf("%d\n",data);	//11
	후위형
		data++;		다음 줄부터 적용

		int data = 10;
		printf("%d\n",data++);	//10
		printf("%d\n",data);	//11

반복문
	특정한 코드나 행위를 반복해야 할 때 사용하는 문장

	조건에 의한 반복문
		while
		do ~ while
	횟수에 의한 반복문
		for

while문
	선평가 후실행
	while(조건식){
		조건식의 연산 결과가 1이라면 수행할 문장
	}

do ~ while문
	while문과 동일하지만 무조건 한번은 실행한다.
	선실행 후평가
	
	do{
		조건식의 연산 결과가 1이라면 수행할 문장
	}while(조건식);

무한반복
	while(1){
		무한반복할 문장;
	}

	while문 뒤의 괄호에는 조건식, 즉 1 또는 0이라는 값이 와야한다.
	따라서 그 안에 1 이라는 값을 넣게 되면 그 값은 상수로 작성했기 때문에	
	변하지 않고 그 while문은 무한정으로 반복하게 된다. 무한반복이라는 것은
	실제로 무한정으로 반복하게 만드는 것이 아니라, 특정한 조건일 때
	if문 안의 break를 통한 탈출구 하나 이상을 만들어 주어야 한다.

for문
	횟수에 의한 반복문
	반복횟수가 특정되어 있을 때 사용한다.
	무언가 값이 일정하게 변하는 반복이면 대부분의 경우가 for문을 사용한다.

	for(초기식;조건식;증감식){
		반복할 문장
	}

	for(int i=0;i<10;i++){

	}
	for(int i=0;i>-10;i--){

	}

	초기식에서 새로운 변수를 하나 선언해준다. (내부에서 그 변수를 이용가능)
	for문 안에서는 그 변수의 값으로 무언가 변하는 값을 나타낼 수 있다.














