동적 할당(dynamic allocation)
	활용할 공간의 크기를 미리 정하지 않고
	때에 따라서 동적으로 만드는 방법
	stdlib.h

	메모리가 할당되면 Heap영역에 할당이 된다.
	Heap영역은 이름을 따로 붙일 수 없고
	주소값만 존재하는 공간이다.
	따라서 동적할당을 해주는 함수들은
	우리가 요청한 크기의 메모리를 확보하고
	그 확보된 공간의 주소값을 리턴한다.
	우리는 그 리턴된 주소값을 맞는 타입의
	포인터 변수에 넣어두고 활용할 수 있다.

malloc()	memory allocation
	malloc(바이트크기);
	할당된 공간의 주소값을 리턴한다.(void*)
	20byte : int로 활용하면 5칸, char로 활용하면 20칸, ...

	malloc은 단순히 메모리만 할당해주는 함수이기 때문에
	그 메모리를 개발자가 어떤 데이터 타입을 저장할지 알 수 없다.
	그렇기 때문에 void포인터를 리턴해서 개발자가 알맞은 용도로
	변환하여 사용할 수 있게 만들어져 있다.
	할당을 실패하게 되면 NULL값을 리턴하고
	할당을 성공하면 내부에 쓰레기값이 들어있는 공간의 주소값을 리턴한다.

free()
	free(주소값);
	넘겨준 주소에 할당되어 있는 공간을 해제해준다.
	할당된 메모리가 더이상 사용되지 않는다면 free()를 이용해서
	메모리를 해제시켜 주어야 한다.

calloc()	
	calloc(cnt, size);
	size크기를 cnt개만큼 담을 수 있는 공간을 할당한다.
	할당된 공간을 전부 초기화 한 후 주소값을 돌려준다.

realloc()
	realloc(할당할포인터,할당할크기);
	이미 할당된 공간의 크기를 바꾸고 싶을 때 realloc을 사용한다.














