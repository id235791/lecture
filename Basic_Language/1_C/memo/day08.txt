구조체
	추상적인 개념을 구체화 시켜서
	공통요소로 구조화 시켜놓은것
	반복되는 공통 요소들을 쉽게 관리하기 위해서
	붕어빵 틀

구조체 선언
	struct 구조체이름{
		자료형 변수명;
		자료형 변수명;
		...
	};

	typedef struct 구조체이름{
		자료형 변수명;
		자료형 변수명;
		...
	}별칭;

	별칭을 주면 "struct 구조체이름" 대신에
	"별칭"으로 쓸 수 있다.

구조체 선언시 주의사항
	함수 밖에서 선언해야 한다.
	선언시 필드 변수에 초기값을 넣을 수 없다.

구조체 초기화
	struct 구조체이름 변수명 = {값1,값2,...};
	struct 구조체이름 변수명 = {.변수명=값, .변수명=값, ..};

구조체 사용
	해당 구조체는 일종의 타입이다.
	변수를 만든 후 .(하위연산자)로 접근하여 각 필드를 사용한다.

	struct 구조체이름 변수명;
	변수명.필드명

구조체 포인터
	구조체 변수의 주소값을 담는 포인터 변수
	
	구조체명* 변수명 = 구조체주소값;

파일 입출력
	FILE 구조체 포인터 사용

	FILE* 변수=fopen("경로/파일명.확장자","모드");

모드
	w : write
		파일 쓰기 모드(기존의 내용에 덮어씌우기)
		파일이 존재하지 않으면 그대로 생성해준다.
	a : append
		파일 쓰기 모드(기존의 내용에 이어서 붙이기)
	r : read
		파일 읽기 모드(기존 내용 읽어오기)
		파일이 존재하지 않으면 오류 발생

파일에 쓰기
	fputc('문자',파일포인터)	: 해당 문자를 준비시킨 파일에 쓰기

	fprintf(파일포인터,"서식문자열",값1,값2,...) : 서식대로 값을 파일에 쓰기 
	
파일에서 읽어오기
	fgetc(파일포인터)		: 해당 파일에서 한글자 읽어오기
				통째로가 읽어온 문자타입의 값

	fscanf(파일포인터,"서식문자열",&변수,&변수,...) : 서식대로 값을 읽어오기

EOF
	End Of File
	파일의 끝을 의미한다.














