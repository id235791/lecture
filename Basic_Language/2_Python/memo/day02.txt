입력
	사용자가 값을 개발자에게 넘겨주는 행위

입력 상태
	커서가 깜빡이면서 값이 들어오기를 기다리는 상태
	개발자가 할 수 있는것은 사용자에게 입력상태로 만들어 주는것 까지이다.
	밑에 있는 코드들은 입력된 값이 있다고 가정하고 작성한다.

입력 함수
	input("사용자에게 보여줄 문자열")
	통째로가 사용자가 입력한 str 값이다.
	
형변환
	자동 형변환
		정수 + 실수 ---> 실수
		10+0.0

	강제 형변환
		자료형(값)

		int('8')	---> 8
		float(10)	---> 10.0
		str(7)		---> '7'

연산자
	기능이 있는 특수문자 혹은 단어
	단, 키워드는 연산자가 아니다.

우선순위
	한 문장 안에 여러개의 연산자가 있을 때 먼저 연산하는 순위

	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자

결합성
	우선순위가 같은 연산자가 한 문장안에 여러개 있을 때
	알맞은 연산 방향으로 결합 후 연산되는 성질

	(1+2)+3+4+5
	(3+3)+4+5
	(6+4)+5
	10+5
	15

최우선 연산자
	()

비트 연산
	1 bit	: 0 또는 1 이 담길 수 있는 컴퓨터 용량의 최소단위
	1 byte	: 8 bit를 모아서 하나로 만든 데이터의 최소단위

	14 : 01110
	17 : 10001

	&(AND)	: 논리곱			두 비트가 모두 1일때 1

	14&17 --> (2진법) 01110 & 10001 --> (2진법) 00000 --> (10진법) 0

	|(OR)	: 논리합			둘 중 하나라도 1이면 1

	14|17 --> (2진법) 01110 | 10001 --> (2진법) 11111 --> (10진법) 31

	^(XOR)	: 배타논리합		두 비트가 서로 다를 때 1

	14^17 --> (2진법) 01110 ^ 10001 --> (2진법) 11111 --> (10진법) 31

	~(NOT)	: 논리부정, 비트뒤집기	1은 0으로, 0은 1로 비트를 바꿔준다.
		부호비트도 뒤집어 준다.(양수 -> 음수 / 음수 -> 양수)

	~14 --> (2진법) ~01110 --> (2진법) 10001 --> (10진법) -15
	~a = -(a+1)

비트 이동(쉬프트 연산자)
	
	우쉬프트
	a>>b	: a를 b만큼 오른쪽으로 비트이동

	10>>1 --> (2진법) 1010 >> 1 --> (2진법) 0101 --> (10진법) 5

	좌시프트
	a<<b	: a를 b만큼 왼쪽으로 비트이동

	10<<1 --> (2진법) 1010 << 1 --> (2진법) 10100 --> (10진법) 20

조건식
	조건을 제시하는 식
	주장하는 식(이건 10이야~, 이 수는 저 수보다 작아~)
	결과가 True, False 단 두가지로 나오는 식
	관계연산자로 인해 만들어진다.
	
	논리형	bool	1 byte	True,False

관계 연산자

	>, <	: 초과, 미만
	>=, <=	: 이상, 이하
	==	: 같다
	!=	: 다르다

논리 연산자
	각 조건식들의 관계를 설정하는 연산자
	A, B는 조건식으로 가정한다.

	A and B	: 두 조건식의 연산 결과가 둘 다 참일 때 참
	A or B	: 두 조건식 중 하나라도 참 이면 참

	num==1 or 2		(X)
	num==1 or num==2	(O)

단항 연산자
	not A : 참은 거짓으로, 거짓은 참으로 변경

최우선 연산자
	()
단항 연산자
	~
이항 연산자
	산술 연산자
		+ - * / // %
	쉬프트 연산자
		>> <<
	관계 연산자
		> < >= <= == !=
	논리 연산자
		and or
삼항 연산자
	
대입 연산자
	=

삼항 연산자
	(참일때 오는 부분) if (조건식) else (거짓일때 오는 부분)

	(통째로 값으로 보면 안된다.)
	참일 때 수행할 문장 if 조건식 else 거짓일 때 수행할 문장

	(통째로 값으로 봐야 한다.)
	변수 = 참일때의 값 if 조건식 else 거짓일때의 값

	경우의 수가 두가지일 때 사용하는 것이 좋다.













