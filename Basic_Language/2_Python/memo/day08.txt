다형성(Polymorphism)
	오버라이딩(재정의) : Overriding
		부모 필드에 이미 a()라는 메소드가 존재한다면
		부모 생성자가 먼저 호출되기 때문에 부모의 a()가
		먼저 메모리에 올라간다. 그 다음 자식 필드를
		메모리에 올릴 때 같은 이름의 a() 메소드가 선언되어
		있다면 같은 이름으로 두개가 만들어지지 않고 기존에
		만들어진 부모의 a() 메소드에 자식에서 작성한 내용이
		덮어 씌워지게 된다. 그러므로 자식 객체로 a()를 사용하면
		재정의된 기능으로 사용되며 이것을 오버라이딩이라 한다.

예외 처리
	에러 : 심각한 오류
	예외 : 덜 심각한 오류

try ~ except ~ finally 문

	try:
		예외가 발생할 수 있는 문장
		...

	except 예외클래스명:
		예외 발생시 실행할 문장
	...

	finally:
		예외 발생 유무에 상관없이 실행할 문장

Exception 클래스
	모든 예외들의 부모 클래스
	예외가 어떤것이 발생할지 모를 때 사용
	처리를 위해서 사용하면 X

except 클래스명 as 객체명:
	예외객체 받아와서 사용가능

except (클래스명,클래스명,...) [as 객체명]:
	
raise
	raise 예외클래스명
	raise 예외클래스명()

	예외 발생시키기
--------------------------------------------------------------------------
파일 입출력
	파일객체 = open("경로/파일이름.확장자","모드")

	모드
		w : write
			파일 쓰기(기존의 내용에 덮어씌우기)
		a : append
			파일 쓰기(기존의 내용에 추가하기)
		r : read
			파일 읽기(기존의 내용 읽어오기)

파일 쓰기
	파일객체.write("문자열")
		해당 파일에 문자열 쓰기

	파일객체.close()
		파일에 적용시키면서 파일 닫기

파일 읽기
	파일객체.readlines()
		해당 파일의 모든 줄 읽어오기(\n도 포함)
		각 줄의 내용들이 담겨있는 리스트로 반환














