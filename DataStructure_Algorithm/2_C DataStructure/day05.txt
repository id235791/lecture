큐(Queue)
	선입선출(First In First Out) - FIFO
	삽입과 삭제가 서로 다른 입구에서 일어난다.
	한쪽에서는 삽입, 반대쪽에서는 삭제

	장점 : 시간 순서대로 처리해야 할 시 편리하다.
	단점 : 삽입과 삭제하는 방향이 정해져있다.

	front	: 삭제
	rear	: 삽입

선형큐(인접큐)
	배열 이용, 고정 크기
	데이터를 삭제해서 비어있음에도 불구하고 이전 공간을 활용할 수 없다.

원형큐
	배열 이용, 고정 크기
	삭제시에 다시 빈공간을 활용 가능하다.

연결큐
	연결리스트 구조
	rear변수를 새로운 데이터를 추가할 때마다 newNode로 바꿔주기
	첫 추가일 경우 front를 newNode로 바꿔주기
	첫 추가가 아니라면 현재 rear(마지막노드)의 next에 newNode를 연결
	삭제시에는 front의 데이터를 가져오고 front는 다음 노드로 이동

트리(Tree)
	비선형 구조 - 하나의 자료 뒤에 여러개의 자료가 존재할 수 있는
	앞 뒤 관계가 1:n 또는 n:m 관계의 구조
	사이클이 없는 하나의 연결 그래프

트리 구조의 요소
	루트노드(root)	: 부모가 없는 노드, 트리에 단 하나 존재한다.
	단말노드(leaf)	: 자식이 없는 노드
	내부노드(internal): 단말노드가 아닌 노드
	간선(edge)	: 노드를 연결하는 선
	형제(sibling)	: 같은 부모 노드를 가지는 노드
	노드의 크기(size)	: 자신을 포함한 자손 노드의 개수
	노드의 깊이(depth)	: 루트에서 해당 노드에 접근할 때 거쳐야 하는 간선의 수
	노드의 레벨(level)	: 트리의 특정 깊이를 가지는 노드의 집합
	노드의 차수(degree): 간선의 수
	트리의 차수	: 노드의 차수 중 최대값(degree of tree)
	트리의 높이(height) : 노드의 깊이 중 최대값

트리의 특징
	상하가 존재하는 계층 모델
	DAG(Directed Acyclic Graphs) : 방향성이 있는 비순환 그래프
	노드가 N개이면 간선의 수는 N-1개이다.
	루트에서 어떤 노드로 가는 경로는 유일하다.
	한개의 루트노드만 존재하며, 모든 자식 노드는 하나의 부모만 가진다.
	
이진트리	: 자식 노드가 최대 두개인 노드들로 구성된 트리
K진트리	: 자식 노드가 최대 K개인 노드들로 구성된 트리

완전 이진트리	: 트리의 모든 높이에서 노드가 꽉 차 있는 이진트리
		마지막 레벨을 제외하고 모든 레벨이 완전히 채워져 있다.
전 이진트리	: 모든 노드가 0개 또는 2개의 자식 노드를 갖는 트리
포화 이진트리	: 전 이진트리 이면서 완전 이진트리인 트리-/*
















