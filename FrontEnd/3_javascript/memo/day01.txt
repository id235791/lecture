자바스크립트(JavaScript)
	- 태초에 WWW 브라우저가 있었고(CERN에서 사용) 이후에 이름은 Nexus로 변경
	1993년 무료로 웹을 이용하도록 기술을 개방하고 그 해에 모자이크 브라우저 탄생
	모자이크는 최초의 성공한 그래픽 웹 브라우저로 야후닷컴과 함께 웹의 확산을 일으킴
	그 개발자중 한명이 넷스케이프 커뮤니케이션즈 설립하고, 이후 넷스케이프 네비게이터
	(이름을 모질라로 하려다 취소) 브라우저를 발매, 그리고 그 넷스케이프 네비게이터에
	있던 어플리케이션 개발용 언어가 JavaScript
	초기에는 넷스케이프가 인터넷 익스플로러보다 훨씬 유명했고 세계 최고였음(점유율 90)
	IE가 쫓아오자 넷스케이프는 Javascript, CSS를 브라우저에 넣어 격차를 둠
	1997/10 기준 점유율 넷스케이프 72, IE 18  - 제1차 브라우저 전쟁 발생
	MS의 양아치짓(무료로 뿌리기, Windows의 점유율로 끼워팔기, ..)과
	넷스케이프의 기민하지 못한 대응(유료화 유지, 안정화는 안함 등)으로 밀리기 시작 
	2001년 IE 점유율 90%, 처참한 패배인 넷스케이프는 후에 소스코드 공개 후 포기
	서버 소프트웨어 제품들은 썬사에 매각되고 썬사는 오라클에 매각(이때 JAVA 얘기)
	새로운 재단(넷스케이프 출신들 다수 포함)이 이를 바탕으로 오픈소스 기반의
	웹 브라우저를 개발(모질라재단, Firefox)했고 개발자 이름은 브랜든 아이크
	이후 반MS 진영에 있던 망해가던 기업인 구글에서 모질라재단의 개발자들을 고용,
	새로운 브라우저를 탄생시키고 그게 전설의 크롬, 처음엔 파이어폭스 측에서는
	자신들의 점유율을 깎아먹어서 MS타도에 방해가 될까봐 반대했지만 반전이 일어나고
	MS를 물리친건 압도적으로 점유율 상승한 크롬. 결국 제2차 브라우저 전쟁은
	파이어폭스, IE가 아닌 크롬의 승리

	첫이름은 모카였다가 LiveScript로 변경, 자바의 문법과 비슷하다는 이유로
	(그때 유행하던 자바 인기에 편승해서) Javascript로 이름을 지었다.
	Brendan Erich(브랜든 아이크)가 10일만에 설계
	Mocha -> LiveScript -> JavaScript
	넷스케이프 네비게이터에 포함되어 있었음
	
스크립트 표준화 
	ECMA Script 1
	...
	ECMA Script 5 <----- MS 참여
	ECMA Script 6
	...
	ECMA Script 10

자바스크립트의 특징
	웹 브라우저에 자바스크립트 엔진이 내장되어 있기 때문에 사용이 가능
	웹의 동작(동적) 구현하기 위한 언어
	웹 브라우저에서 동작(단, node.js 환경은 서버(운영체제)에서 동작)
	객체 기반의 스크립트 언어
	HTML문서 내에서 <script> ~ </script> 태그 안에 작성
	대소문자를 구별

자바스크립트의 출력
	1. 문서 출력
		document.write() 함수를 통해 <body>에 출력
	2. 콘솔 출력
		console.log() 함수를 통해 브라우저 콘솔에 출력

외부 자바스크립트 파일로 적용
	<script src="자바스크립트 파일경로"></script>

defer
	<script>는 다운로드와 실행이 순차적으로 진행되는 것과 달리
	defer 속성을 가진 스크립트는 브라우저가 <script defer>를
	만났을 때 다운로드 시작하지만, html 파싱을 막지 않고
	</html>을 만났을 때 실행됩니다.

자바스크립트 프로그래밍

프로그래밍
	컴퓨터의 프로그램을 작성하는 일
	작성 방법의 결정, 코딩, 에러 수정등의 작업
	단순 데이터의 표기가 아닌 논리적 흐름(알고리즘)에 의한 처리과정을 만드는것

변수(Variable)
	데이터를 저장할 수 있는 메모리 공간
	저장공간

	x	=	10
	저장공간	대입	값
	이름	연산자

변수의 선언
	let 변수명;     // 변수를 선언
	변수명 = 값;    // 변수를 초기화

	let num;
	let num = 10;

	var num;    // 예전부터 사용했던 변수 선언방법
	num = 10;   // 현재는 사용하지 않음

	* var를 사용하지 않는 이유
		1. 같은 이름의 변수를 선언할 수 있음
		2. 지역변수와 전역변수의 구별이 모호

* use strict
	strict mode를 사용한다는 의미
	코드를 엄격하게 사용하도록 함

	<script>
		'use strict';
		...
	</script>

상수(constant)
	한번 선언된 상수는 다시 재정의 할 수 없으며, 값도 재할당 할 수 없음

	const 상수명;
	상수명 = 값; <----- (에러)

	const 상수명 = 값 (O)


자료형
	프로그램에서 다룰 수 있는 값의 종류를 의미
	typeof() : 자바스크립트의 타입을 반환

	1. 숫자형(number)
		다른 언어와 달리 정수와 실수를 따로 구분하지 않음
		모든 수를 실수 하나로만 표현

	2. 문자열형(string)
		문자열형은 따옴표로 둘러싸인 문자의 집합

	"김사과 : '여러분 안녕하세요?'"; // 김사과 : '여러분 안녕하세요?'
	'김사과 : "여러분 안녕하세요?"'; // 김사과 : "여러분 안녕하세요?"
	`여러분 안녕하세요?
	자바스크립트는 어렵습니다
	그래서 너무 즐거워요.`;

	3. undefined, null 형

		undefined : 타입이 정해지지 않은 것을 의미
			let num;
			console.log(num);   // undefined

		null : 값이 정해지지 않은 것을 의미, null로 변수를 초기화 한 경우
			let dog = null;
			console.log(dog);   // null
			let dog = {};
			console.log(typeof(dog));   // object


	4. 객체형(Object)
		여러 속성을 하나의 변수에 저장할 수 있도록 해주는 타입
		키와 값 구조로 저장

		const student = {"no":"000001", "name":"김사과", "age":20};
				------ ------
				 key   value

	5. 심볼형(Symbol)
	유일하고 변경 불가능한 기본값을 만듬
	객체 속성의 key값으로 사용할 수 있음

	const symbol1 = Symbol("apple");
	const symbol2 = Symbol("apple");
	// === : 타입과 값을 모두 비교
	console.log(symbol1 === symbol2);//false