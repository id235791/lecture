HashMap
	Map 구조는 Key(키)와 Value(값)가 한 쌍으로 저장되는 형태이다.
	그러므로 검색에 용이하다.
	Key는 중복이 불가능하며, Value는 가능하다.
	Key는 Set 타입에 저장되고, Value는 Collection 타입에 저장된다.
	키 <-> 해시테이블 <-> 값

		Key	Value
	Entry	fly	날다
	Entry	walk	걷다
	Entry	run	뛰다

	.keySet()		Key들만 모여있는 Set을 리턴
	.values()		Value들만 모여있는 Collection을 리턴
	.entrySet()		Entry들이 모여있는 Set을 리턴

컬렉션 이용시 주의할 점
	컬렉션에서는 요소들을 비교할 때 그 요소 타입의 equals() 혹은 hashCode()로
	비교하기 때문에 우리가 만든 클래스에서 그것들을 재정의 하지 않는다면 주소값 비교로
	같은 요소를 찾을 수 없게된다. 따라서 비교하고자 하는 요소들을 올바르게 비교하도록
	두 메소드를 재정의해서 사용해야 한다.

향상된 for문(빠른 for문, forEach문)
	단순하게 모든 값들을 순회할 때 사용하는 것이 좋다.
	순서가 중요한 경우에는(몇 번째에 어떤 값이 있는지 알아야 할 필요가 있는 경우)
	기존의 for문을 이용하는 것이 좋다.

	for(자료형 변수명 : 반복자){
		변수가 안에 있는 요소들을 하나씩 꺼내오며 반복
	}

API(Application Programming Interface)
	자바 시스템을 제어하기 위해 자바에서 제공하는 명령어들을 모아놓은 집합체를 의미한다.
	선배 개발자들이 JAVA에서 코딩을 쉽게 할 수 있도록 미리 만들어 놓은 것
	API 의 종류는 굉장히 많고 다양하기 때문에 모두 외우는 것은 불가능하다.
	그렇기 때문에 처음 보는 API라도 설명과 이름, 매개변수 등을 잘 읽고
	맞는 목적으로 알맞게 사용하는 방법을 알아야 한다.
	
CoolSMS
	API jar파일 다운로드
	https://github.com/coolsms/coolsms-java-examples/releases/tag/4.2.7

	예제 소스 코드
	https://github.com/coolsms/coolsms-java-examples/blob/main/maven-spring-demo/src/main/java/net/nurigo/mavenspringdemo/ExampleController.java







