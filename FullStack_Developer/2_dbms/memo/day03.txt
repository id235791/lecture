like 조건식
	뒤에 오는 와일드카드 문자열과 비교하여
	그 문자열에 해당하면 참 / 아니라면 거짓

	컬럼 like('와일드카드 문자열')

와일드카드
	_ : 한 글자
		ex) '_다솔' : '정다솔', '김다솔', '이다솔', ...

	% : 모든 것
		ex) '정%' : '정다솔', '정문', '정', ...

	\_ : _ 한 개
	\% : % 한 개

	'_이_'		세글자 중 가운데가 '이' 이면 참
	'_이%'		두번째 글자가 '이'면 참
	'%이_'		뒤에서 두번째 글자가 '이'면 참
	'__이%'		세번째 글자가 '이'면 참
	'_이_%'		두번째 글자가 '이'이며 3글자 이상이면 참
	'%\_%'		문자열에 _가 포함되어 있으면 참
	'%\___'		문자열의 마지막에서 3번째 글자가 _ 이면 참
	'%\%%'		문자열에 %가 포함되어 있으면 참
	'_\_%\%_'	문자열의 두번째 글자가 _이고 마지막에서 두번째 글자가 %이면 참

Auto Increment
	Table에 데이터가 추가될 때마다 변하는 값을 미리 설계할 수 있다.
	정수형의 pk 컬럼에만 설정 가능

	create table 테이블명(
		pk명 int primary key auto_increment,
		...
	);

date, datetime 타입
	date	: 'YYYY-MM-DD' 형태의 문자열로 삽입
	datetime: 'YYYY-MM-DD HH:MI:SS' 형태의 문자열로 삽입

함수
	단일행 함수
		행 하나당 결과를 하나 만들어내는 함수
		문자함수, 숫자함수, 형변환함수, NULL처리 함수

	그룹 함수(집계 함수)
		여러 행의 데이터들을 받아서 하나의 결과를 도출해주는 함수

order by
	검색 결과를 정렬하는 문법

	order by 컬럼1 [정렬기준], 컬럼2 [정렬기준], ...
	-> 컬럼1 기준으로 정렬, 그 내부에서 컬럼2 기준으로 정렬, ...

	정렬기준
		생략시 오름차순
		asc	: 오름차순
		desc	: 내림차순

group by
	그룹함수를 적용시킬 파트(범위)를 나누는 문법
	~~별, ~~마다

	group by 컬럼1, 컬럼2, ...
	-> 컬럼1 기준으로 그룹짓기, 그 내부에서 컬럼2 기준으로 그룹짓기, ...

having 조건절
	group by를 통해 그룹을 짓고 구해진 결과가 있을 때
	그 그룹중에 조건에 따라 필터링을 할 때 사용하는 문법

select 문의 구조
	select 컬럼1, 컬럼2, ... from 테이블명
	where 조건식 group by 컬럼1, 컬럼2, ...
	having 조건식 order by 컬럼1, 컬럼2, ...

	from > where > group by > having > select > order by












