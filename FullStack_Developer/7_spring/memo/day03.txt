Exception 처리
	application.properties 파일에 예외처리에 대한 설정들을 작성
	templates 폴더 내에 설정해둔 경로로 오류코드.html 을 생성

AOP
	Aspect Oriented Programing
	관점 지향 프로그래밍
	좋은 개발환경에서는 개발자가 비즈니스 로직에만 집중할 수 있게 한다.
	스프링에서는 반복적인 코드를 제거해줌으로써 핵심 비즈니스 로직에만
	집중할 수 있는 방법을 제공한다. 보안이나 로그, 예외처리 등과 같이
	비즈니스 로직은 아니지만 반드시 처리해야 할 부분들(횡단 관심사 - cross concern)
	을 따로 분리해서 제작하는 것이 가능하고 횡단 관심사를 모듈로 분리하여
	프로그래밍 하는 것을 AOP 라고 한다.
	1) 핵심 비즈니스 로직에만 집중해서 코드 개발
	2) 각 프로젝트마다 다른 관심사를 적용할 시 코드 수정 최소화
	3) 원하는 관심사의 유지보수가 수월한 코드 구성이 가능

Git
	형상 관리 시스템(버전 관리 시스템)의 한 종류

Staging - 로컬 레포지토리에 업로드(버전 관리 준비 단계)
Commit - 버전 관리 확정

Push - 깃허브 레포지토리에 프로젝트 업로드
Pull - 깃허브 레포지토리에 있는 프로젝트 받기
