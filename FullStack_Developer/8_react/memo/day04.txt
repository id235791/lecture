백엔드 서버와의 연동
	스프링부트 백엔드 프로젝트 생성(:8080) > 내부에 프론트엔드 프로젝트 생성(:3000)
	> 특정 url인 경우 :3000 대신 :8080으로 요청을 전달 > 처리

	모든 백엔드 처리는 REST 방식으로, 프론트엔드와의 소통은 Ajax로 설계

SOP, CORS
	SOP(Same Origin Policy - 동일 출처 정책)
		클라이언트에서 자원을 요청할 때 동일한 출처에서만 요청할 수 있는 정책
		protocol, host, port가 같아야 동일한 출처

		localhost:3000 -> localhost:3000/user (가능)
		localhost:3000 -> localhost:8080/user (불가능)

	CORS(Cross Origin Resource Sharing - 교차 출처 리소스 공유)
		서로 다른 출처의 리소스를 공유할 수 있도록 하는 방법
		클라이언트 혹은 서버 양쪽에서 해결 가능
		서버에서의 해결 방법 : CORS 미들웨어(사이의 접합장치) 사용, 헤더 세팅 등
		클라이언트에서의 해결 방법 : 프록시 서버 사용

프록시 서버
	다른 네트워크 서비스에 간접적으로 접속할 수 있게 해주는 서버
	클라이언트 -> (프록시 서버 - 출처를 백엔드서버와 동일하게 수정) -> 백엔드
	npm i http-proxy-middleware

axios
	Node.js의 HTTP 비동기 통신 라이브러리
	HTTP 요청과 응답을 JSON 형태로 자동 변경
	npm i axios

Daum Postcode
	npm i react-daum-postcode



