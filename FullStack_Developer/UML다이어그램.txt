UML(Unified Modeling Language)
	소프트웨어 시스템을 개발할 때 결과물, 산출물을 표현할 방법이 필요함
	이 때 산출물을 명세화, 시각화, 문서화 하기 위해 사용되는 모델링 언어
	어떠한 시스템을 표현하기 위한 표준화된 방법을 제공, 사용

UML Diagram
	UML을 통해 명세화, 시각화 하여 프로젝트를 표현해 낸 다이어그램
	크게 구조 다이어그램, 행위 다이어그램으로 나뉨

구조 다이어그램
	프로젝트의 실행과는 관계없이 프로젝트를 이루고 있는 구조를 시각화 한 다이어그램
	클래스, 객체, 패키지, 컴포넌트, 배치

	클래스 다이어그램
		클래스의 속성, 함수(메소드), 변수 타입 등으로 구성된 다이어그램
		프로젝트를 구성하고 있는 클래스와 그 클래스들 간의 관계를 표현

클래스 다이어그램 작성법
	접근제어자 및 키워드
		+ public / - private / # protected / ~ default
	메소드
		메소드명(매개변수타입1,매개변수타입2,...):리턴타입
			ex) add(int,int):int
	추상클래스
		이탤릭체 / 클래스명(abstract) / <<abstract>>
	화살표
		A ----> B : A의 메소드가 B를 참조(ex : A의 메소드 중 매개변수로 B 타입이 선언된 경우)
		A ────> B : A가 B를 참조(ex : A의 필드로 B타입이 선언된 경우)
		A ----▷ B : A가 B인터페이스를 상속받아 구현
		A ────▷ B : A가 B를 상속받음

행위 다이어그램
	프로젝트가 실제로 실행되었을 때를 기반으로 각 측면에서 바라보아 시각화 한 다이어그램
	쓰임새(UseCase), 활동(Activity), 상태(State), 순서(Sequence), Communication

	유스케이스 다이어그램
		Actor(사용자, 관리자 등 시스템과 상호작용 하는 시스템 외부의 존재)의 관점에서
		바라본 시스템을 표현한 다이어그램
		기능적 요소(Actor가 인식 가능한 기능)와 비기능적 요소(Actor가 인식 불가능한 기능)로
		구별하여 기능적 요소들을 유스케이스로 작성 후 연관관계 설정
		https://googry.tistory.com/2

	Activity 다이어그램
		시스템 내부에 존재하는 여러 기능, 행위들의 흐름을 시각화한 다이어그램

ERD(Entity Relationship Diagram)
	개체와 관계를 중점적으로 표시하는 데이터베이스 구조를 시각화한 다이어그램
	개체 관계도 라고 부르며 엔티티와 속성들의 관계를 그림으로 표현한 것
	테이블간의 관계도

*Star UML*












